<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>crabzilla</groupId>
    <artifactId>crabzilla</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <kotlin.version>1.1.4</kotlin.version>
        <lombok.version>1.16.18</lombok.version>
        <vertx.version>3.5.0.Beta1</vertx.version>
        <vavr.version>0.9.0</vavr.version>
        <guice.version>4.1.0</guice.version>
        <expiringmap.version>0.5.8</expiringmap.version>
        <sl4j.version>1.7.8</sl4j.version>
        <jdbi.version>3.0.0-beta2</jdbi.version>
        <mysql.version>6.0.6</mysql.version>
        <commons.version>3.5</commons.version>
        <javaslang.version>2.0.5</javaslang.version>
        <jackson.version>2.9.0.pr4</jackson.version>
        <hikari.version>2.6.1</hikari.version>
        <junit.jupiter.version>5.0.0-RC2</junit.jupiter.version>
        <junit.vintage.version>4.12.0-RC2</junit.vintage.version>
        <junit.platform.version>1.0.0-RC2</junit.platform.version>
        <skipTests>false</skipTests>
        <skipITs>${skipTests}</skipITs>
        <skipUTs>${skipTests}</skipUTs>
        <asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
        <asciidoctorj.pdf.version>1.5.0-alpha.15</asciidoctorj.pdf.version>
        <asciidoctorj.version>1.5.5</asciidoctorj.version>
    </properties>

    <modules>

        <module>crabzilla-core</module>
        <module>crabzilla-example1</module>
        <module>crabzilla-vavr-example1</module>
        <module>crabzilla-kotlin-example1</module>
        <module>crabzilla-vertx</module>

    </modules>

    <distributionManagement>
        <repository>
            <id>bintray-crabzilla-crabzilla</id>
            <url>https://api.bintray.com/maven/rodolfodpk/crabzilla/crabzilla/;publish=1</url>
        </repository>
    </distributionManagement>

    <dependencies>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- test -->

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>



    <dependencyManagement>

        <dependencies>

            <!-- own -->

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-example1-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-example1-database</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-vertx-example1-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-vertx-example1-database</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-kotlin-example1-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-kotlin-example1-database</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-vertx-stack</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>crabzilla</groupId>
                <artifactId>crabzilla-vertx</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- kotlin -->

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.microutils</groupId>
                <artifactId>kotlin-logging</artifactId>
                <version>1.4.6</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-kotlin</artifactId>
                <version>${jdbi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-kotlin-sqlobject</artifactId>
                <version>${jdbi.version}</version>
            </dependency>

            <!-- util -->

            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.version}</version>
            </dependency>

            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
            </dependency>

            <dependency>
                <groupId>net.jodah</groupId>
                <artifactId>expiringmap</artifactId>
                <version>${expiringmap.version}</version>
            </dependency>

            <!-- config/ guice -->
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-multibindings</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <!-- logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${sl4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${sl4j.version}</version>
            </dependency>

            <!-- json -->
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- sql stack -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikari.version}</version>
            </dependency>

            <!-- jdbi3 -->
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3</artifactId>
                <version>${jdbi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-sqlobject</artifactId>
                <version>${jdbi.version}</version>
            </dependency>

            <!--Vertx -->

            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-circuit-breaker</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-hazelcast</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-jdbc-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-sql-common</artifactId>
                <version>${vertx.version}</version>
            </dependency>

            <!-- test -->

            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-unit</artifactId>
                <scope>test</scope>
                <version>${vertx.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit.vintage.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.7.4</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.5.0</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals> <goal>compile</goal> </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals> <goal>testCompile</goal> </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit.platform.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skipTests>${skipUTs}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>run-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <skipITs>${skipITs}</skipITs>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <!--<dependencies>-->
                <!--&lt;!&ndash; Comment this section to use the default jruby artifact provided by the plugin &ndash;&gt;-->
                <!--<dependency>-->
                <!--<groupId>org.jruby</groupId>-->
                <!--<artifactId>jruby-complete</artifactId>-->
                <!--<version>${jruby.version}</version>-->
                <!--</dependency>-->
                <!--&lt;!&ndash; Comment this section to use the default AsciidoctorJ artifact provided by the plugin &ndash;&gt;-->
                <!--<dependency>-->
                <!--<groupId>org.asciidoctor</groupId>-->
                <!--<artifactId>asciidoctorj</artifactId>-->
                <!--<version>${asciidoctorj.version}</version>-->
                <!--</dependency>-->
                <!--</dependencies>-->
                <configuration>
                    <sourceDirectory>doc/asciidoc</sourceDirectory>
                    <baseDir>${project.basedir}</baseDir>
                    <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
                    <!--
                    <baseDir>${project.basedir}</baseDir>
                    -->
                    <!-- Attributes common to all output formats -->
                    <attributes>
                        <endpoint-url>http://example.org</endpoint-url>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                        <project-version>${project.version}</project-version>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>asciidoc-to-html</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <sourceHighlighter>highlightjs</sourceHighlighter>
                            <!--
                            Scenarios for linking vs embedding assets:

                            Link to both stylesheets and images::

                               - don't set embedAssets option
                               - set linkcss attribute to true
                               - set imagesdir attribute to path relative to AsciiDoc source file

                              <attributes>
                                  <linkcss>true</linkcss>
                                  <imagesdir>./images</imagesdir>
                              </attributes>

                            Embed stylesheets and images::

                               - set embedAssets option to true
                               - don't set linkcss attribute
                               - set imagesdir attribute to path relative to project root

                              <embedAssets>true</embedAssets>
                              <attributes>
                                  <imagesdir>src/docs/asciidoc/images</imagesdir>
                              </attributes>

                            Link to stylesheets but embed images::

                               - set embedAssets option to true
                               - set linkcss attribute to true
                               - set imagesdir attribute to path relative to project root

                              <embedAssets>true</embedAssets>
                              <attributes>
                                  <linkcss>true</linkcss>
                                  <imagesdir>src/docs/asciidoc/images</imagesdir>
                              </attributes>

                            Embed stylesheets but link images (default)::

                               - don't set embedAssets option
                               - don't set linkcss attribute
                               - set imagesdir attribute to path relative to AsciiDoc source file

                              <attributes>
                                  <imagesdir>./images</imagesdir>
                              </attributes>

                            IMPORTANT: When you enable image embedding, you must qualify the path the the imagesdir, as shown above.
                            -->
                            <attributes>
                                <imagesdir>./images</imagesdir>
                                <toc>left</toc>
                                <icons>font</icons>
                                <sectanchors>true</sectanchors>
                                <!-- set the idprefix to blank -->
                                <idprefix/>
                                <idseparator>-</idseparator>
                                <docinfo1>true</docinfo1>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>org.projectlombok</groupId>-->
                <!--<artifactId>lombok-maven-plugin</artifactId>-->
                <!--<version>${lombok.version}.1</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>delombok</id>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>delombok</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<formatPreferences>-->
                                <!--<javaLangAsFQN>skip</javaLangAsFQN>-->
                            <!--</formatPreferences>-->
                            <!--<verbose>true</verbose>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>test-delombok</id>-->
                        <!--<phase>generate-test-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>testDelombok</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<verbose>true</verbose>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

        </plugins>

    </build>

</project>
